// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ChecksColumns holds the columns for the "checks" table.
	ChecksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "repo_id", Type: field.TypeInt64},
		{Name: "pull_request_id", Type: field.TypeInt},
		{Name: "name", Type: field.TypeString},
		{Name: "status", Type: field.TypeString},
		{Name: "conclusion", Type: field.TypeString, Nullable: true},
	}
	// ChecksTable holds the schema information for the "checks" table.
	ChecksTable = &schema.Table{
		Name:       "checks",
		Columns:    ChecksColumns,
		PrimaryKey: []*schema.Column{ChecksColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "check_repo_id_pull_request_id_id",
				Unique:  true,
				Columns: []*schema.Column{ChecksColumns[1], ChecksColumns[2], ChecksColumns[0]},
			},
		},
	}
	// GptDialogsColumns holds the columns for the "gpt_dialogs" table.
	GptDialogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "peer_id", Type: field.TypeString},
		{Name: "prompt_msg_id", Type: field.TypeInt},
		{Name: "prompt_msg", Type: field.TypeString},
		{Name: "gpt_msg_id", Type: field.TypeInt},
		{Name: "gpt_msg", Type: field.TypeString},
		{Name: "thread_top_msg_id", Type: field.TypeInt, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
	}
	// GptDialogsTable holds the schema information for the "gpt_dialogs" table.
	GptDialogsTable = &schema.Table{
		Name:       "gpt_dialogs",
		Columns:    GptDialogsColumns,
		PrimaryKey: []*schema.Column{GptDialogsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "gptdialog_peer_id_thread_top_msg_id",
				Unique:  false,
				Columns: []*schema.Column{GptDialogsColumns[1], GptDialogsColumns[6]},
			},
		},
	}
	// LastChannelMessagesColumns holds the columns for the "last_channel_messages" table.
	LastChannelMessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "message_id", Type: field.TypeInt},
	}
	// LastChannelMessagesTable holds the schema information for the "last_channel_messages" table.
	LastChannelMessagesTable = &schema.Table{
		Name:       "last_channel_messages",
		Columns:    LastChannelMessagesColumns,
		PrimaryKey: []*schema.Column{LastChannelMessagesColumns[0]},
	}
	// PrNotificationsColumns holds the columns for the "pr_notifications" table.
	PrNotificationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "repo_id", Type: field.TypeInt64},
		{Name: "pull_request_id", Type: field.TypeInt},
		{Name: "message_id", Type: field.TypeInt},
	}
	// PrNotificationsTable holds the schema information for the "pr_notifications" table.
	PrNotificationsTable = &schema.Table{
		Name:       "pr_notifications",
		Columns:    PrNotificationsColumns,
		PrimaryKey: []*schema.Column{PrNotificationsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "prnotification_repo_id_pull_request_id",
				Unique:  true,
				Columns: []*schema.Column{PrNotificationsColumns[1], PrNotificationsColumns[2]},
			},
		},
	}
	// TelegramChannelStatesColumns holds the columns for the "telegram_channel_states" table.
	TelegramChannelStatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "channel_id", Type: field.TypeInt64},
		{Name: "pts", Type: field.TypeInt, Default: 0},
		{Name: "user_id", Type: field.TypeInt64},
	}
	// TelegramChannelStatesTable holds the schema information for the "telegram_channel_states" table.
	TelegramChannelStatesTable = &schema.Table{
		Name:       "telegram_channel_states",
		Columns:    TelegramChannelStatesColumns,
		PrimaryKey: []*schema.Column{TelegramChannelStatesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "telegram_channel_states_telegram_user_states_channels",
				Columns:    []*schema.Column{TelegramChannelStatesColumns[3]},
				RefColumns: []*schema.Column{TelegramUserStatesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "telegramchannelstate_user_id_channel_id",
				Unique:  true,
				Columns: []*schema.Column{TelegramChannelStatesColumns[3], TelegramChannelStatesColumns[1]},
			},
		},
	}
	// TelegramSessionsColumns holds the columns for the "telegram_sessions" table.
	TelegramSessionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "data", Type: field.TypeBytes},
	}
	// TelegramSessionsTable holds the schema information for the "telegram_sessions" table.
	TelegramSessionsTable = &schema.Table{
		Name:       "telegram_sessions",
		Columns:    TelegramSessionsColumns,
		PrimaryKey: []*schema.Column{TelegramSessionsColumns[0]},
	}
	// TelegramUserStatesColumns holds the columns for the "telegram_user_states" table.
	TelegramUserStatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "qts", Type: field.TypeInt, Default: 0},
		{Name: "pts", Type: field.TypeInt, Default: 0},
		{Name: "date", Type: field.TypeInt, Default: 0},
		{Name: "seq", Type: field.TypeInt, Default: 0},
	}
	// TelegramUserStatesTable holds the schema information for the "telegram_user_states" table.
	TelegramUserStatesTable = &schema.Table{
		Name:       "telegram_user_states",
		Columns:    TelegramUserStatesColumns,
		PrimaryKey: []*schema.Column{TelegramUserStatesColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "username", Type: field.TypeString},
		{Name: "first_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "github_token", Type: field.TypeString, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ChecksTable,
		GptDialogsTable,
		LastChannelMessagesTable,
		PrNotificationsTable,
		TelegramChannelStatesTable,
		TelegramSessionsTable,
		TelegramUserStatesTable,
		UsersTable,
	}
)

func init() {
	TelegramChannelStatesTable.ForeignKeys[0].RefTable = TelegramUserStatesTable
}
