// Code generated by ent, DO NOT EDIT.

package gptdialog

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/go-faster/bot/internal/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldLTE(FieldID, id))
}

// PeerID applies equality check predicate on the "peer_id" field. It's identical to PeerIDEQ.
func PeerID(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldEQ(FieldPeerID, v))
}

// PromptMsgID applies equality check predicate on the "prompt_msg_id" field. It's identical to PromptMsgIDEQ.
func PromptMsgID(v int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldEQ(FieldPromptMsgID, v))
}

// PromptMsg applies equality check predicate on the "prompt_msg" field. It's identical to PromptMsgEQ.
func PromptMsg(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldEQ(FieldPromptMsg, v))
}

// GptMsgID applies equality check predicate on the "gpt_msg_id" field. It's identical to GptMsgIDEQ.
func GptMsgID(v int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldEQ(FieldGptMsgID, v))
}

// GptMsg applies equality check predicate on the "gpt_msg" field. It's identical to GptMsgEQ.
func GptMsg(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldEQ(FieldGptMsg, v))
}

// ThreadTopMsgID applies equality check predicate on the "thread_top_msg_id" field. It's identical to ThreadTopMsgIDEQ.
func ThreadTopMsgID(v int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldEQ(FieldThreadTopMsgID, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldEQ(FieldCreatedAt, v))
}

// PeerIDEQ applies the EQ predicate on the "peer_id" field.
func PeerIDEQ(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldEQ(FieldPeerID, v))
}

// PeerIDNEQ applies the NEQ predicate on the "peer_id" field.
func PeerIDNEQ(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldNEQ(FieldPeerID, v))
}

// PeerIDIn applies the In predicate on the "peer_id" field.
func PeerIDIn(vs ...string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldIn(FieldPeerID, vs...))
}

// PeerIDNotIn applies the NotIn predicate on the "peer_id" field.
func PeerIDNotIn(vs ...string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldNotIn(FieldPeerID, vs...))
}

// PeerIDGT applies the GT predicate on the "peer_id" field.
func PeerIDGT(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldGT(FieldPeerID, v))
}

// PeerIDGTE applies the GTE predicate on the "peer_id" field.
func PeerIDGTE(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldGTE(FieldPeerID, v))
}

// PeerIDLT applies the LT predicate on the "peer_id" field.
func PeerIDLT(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldLT(FieldPeerID, v))
}

// PeerIDLTE applies the LTE predicate on the "peer_id" field.
func PeerIDLTE(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldLTE(FieldPeerID, v))
}

// PeerIDContains applies the Contains predicate on the "peer_id" field.
func PeerIDContains(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldContains(FieldPeerID, v))
}

// PeerIDHasPrefix applies the HasPrefix predicate on the "peer_id" field.
func PeerIDHasPrefix(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldHasPrefix(FieldPeerID, v))
}

// PeerIDHasSuffix applies the HasSuffix predicate on the "peer_id" field.
func PeerIDHasSuffix(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldHasSuffix(FieldPeerID, v))
}

// PeerIDEqualFold applies the EqualFold predicate on the "peer_id" field.
func PeerIDEqualFold(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldEqualFold(FieldPeerID, v))
}

// PeerIDContainsFold applies the ContainsFold predicate on the "peer_id" field.
func PeerIDContainsFold(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldContainsFold(FieldPeerID, v))
}

// PromptMsgIDEQ applies the EQ predicate on the "prompt_msg_id" field.
func PromptMsgIDEQ(v int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldEQ(FieldPromptMsgID, v))
}

// PromptMsgIDNEQ applies the NEQ predicate on the "prompt_msg_id" field.
func PromptMsgIDNEQ(v int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldNEQ(FieldPromptMsgID, v))
}

// PromptMsgIDIn applies the In predicate on the "prompt_msg_id" field.
func PromptMsgIDIn(vs ...int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldIn(FieldPromptMsgID, vs...))
}

// PromptMsgIDNotIn applies the NotIn predicate on the "prompt_msg_id" field.
func PromptMsgIDNotIn(vs ...int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldNotIn(FieldPromptMsgID, vs...))
}

// PromptMsgIDGT applies the GT predicate on the "prompt_msg_id" field.
func PromptMsgIDGT(v int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldGT(FieldPromptMsgID, v))
}

// PromptMsgIDGTE applies the GTE predicate on the "prompt_msg_id" field.
func PromptMsgIDGTE(v int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldGTE(FieldPromptMsgID, v))
}

// PromptMsgIDLT applies the LT predicate on the "prompt_msg_id" field.
func PromptMsgIDLT(v int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldLT(FieldPromptMsgID, v))
}

// PromptMsgIDLTE applies the LTE predicate on the "prompt_msg_id" field.
func PromptMsgIDLTE(v int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldLTE(FieldPromptMsgID, v))
}

// PromptMsgEQ applies the EQ predicate on the "prompt_msg" field.
func PromptMsgEQ(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldEQ(FieldPromptMsg, v))
}

// PromptMsgNEQ applies the NEQ predicate on the "prompt_msg" field.
func PromptMsgNEQ(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldNEQ(FieldPromptMsg, v))
}

// PromptMsgIn applies the In predicate on the "prompt_msg" field.
func PromptMsgIn(vs ...string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldIn(FieldPromptMsg, vs...))
}

// PromptMsgNotIn applies the NotIn predicate on the "prompt_msg" field.
func PromptMsgNotIn(vs ...string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldNotIn(FieldPromptMsg, vs...))
}

// PromptMsgGT applies the GT predicate on the "prompt_msg" field.
func PromptMsgGT(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldGT(FieldPromptMsg, v))
}

// PromptMsgGTE applies the GTE predicate on the "prompt_msg" field.
func PromptMsgGTE(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldGTE(FieldPromptMsg, v))
}

// PromptMsgLT applies the LT predicate on the "prompt_msg" field.
func PromptMsgLT(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldLT(FieldPromptMsg, v))
}

// PromptMsgLTE applies the LTE predicate on the "prompt_msg" field.
func PromptMsgLTE(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldLTE(FieldPromptMsg, v))
}

// PromptMsgContains applies the Contains predicate on the "prompt_msg" field.
func PromptMsgContains(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldContains(FieldPromptMsg, v))
}

// PromptMsgHasPrefix applies the HasPrefix predicate on the "prompt_msg" field.
func PromptMsgHasPrefix(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldHasPrefix(FieldPromptMsg, v))
}

// PromptMsgHasSuffix applies the HasSuffix predicate on the "prompt_msg" field.
func PromptMsgHasSuffix(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldHasSuffix(FieldPromptMsg, v))
}

// PromptMsgEqualFold applies the EqualFold predicate on the "prompt_msg" field.
func PromptMsgEqualFold(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldEqualFold(FieldPromptMsg, v))
}

// PromptMsgContainsFold applies the ContainsFold predicate on the "prompt_msg" field.
func PromptMsgContainsFold(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldContainsFold(FieldPromptMsg, v))
}

// GptMsgIDEQ applies the EQ predicate on the "gpt_msg_id" field.
func GptMsgIDEQ(v int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldEQ(FieldGptMsgID, v))
}

// GptMsgIDNEQ applies the NEQ predicate on the "gpt_msg_id" field.
func GptMsgIDNEQ(v int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldNEQ(FieldGptMsgID, v))
}

// GptMsgIDIn applies the In predicate on the "gpt_msg_id" field.
func GptMsgIDIn(vs ...int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldIn(FieldGptMsgID, vs...))
}

// GptMsgIDNotIn applies the NotIn predicate on the "gpt_msg_id" field.
func GptMsgIDNotIn(vs ...int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldNotIn(FieldGptMsgID, vs...))
}

// GptMsgIDGT applies the GT predicate on the "gpt_msg_id" field.
func GptMsgIDGT(v int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldGT(FieldGptMsgID, v))
}

// GptMsgIDGTE applies the GTE predicate on the "gpt_msg_id" field.
func GptMsgIDGTE(v int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldGTE(FieldGptMsgID, v))
}

// GptMsgIDLT applies the LT predicate on the "gpt_msg_id" field.
func GptMsgIDLT(v int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldLT(FieldGptMsgID, v))
}

// GptMsgIDLTE applies the LTE predicate on the "gpt_msg_id" field.
func GptMsgIDLTE(v int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldLTE(FieldGptMsgID, v))
}

// GptMsgEQ applies the EQ predicate on the "gpt_msg" field.
func GptMsgEQ(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldEQ(FieldGptMsg, v))
}

// GptMsgNEQ applies the NEQ predicate on the "gpt_msg" field.
func GptMsgNEQ(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldNEQ(FieldGptMsg, v))
}

// GptMsgIn applies the In predicate on the "gpt_msg" field.
func GptMsgIn(vs ...string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldIn(FieldGptMsg, vs...))
}

// GptMsgNotIn applies the NotIn predicate on the "gpt_msg" field.
func GptMsgNotIn(vs ...string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldNotIn(FieldGptMsg, vs...))
}

// GptMsgGT applies the GT predicate on the "gpt_msg" field.
func GptMsgGT(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldGT(FieldGptMsg, v))
}

// GptMsgGTE applies the GTE predicate on the "gpt_msg" field.
func GptMsgGTE(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldGTE(FieldGptMsg, v))
}

// GptMsgLT applies the LT predicate on the "gpt_msg" field.
func GptMsgLT(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldLT(FieldGptMsg, v))
}

// GptMsgLTE applies the LTE predicate on the "gpt_msg" field.
func GptMsgLTE(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldLTE(FieldGptMsg, v))
}

// GptMsgContains applies the Contains predicate on the "gpt_msg" field.
func GptMsgContains(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldContains(FieldGptMsg, v))
}

// GptMsgHasPrefix applies the HasPrefix predicate on the "gpt_msg" field.
func GptMsgHasPrefix(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldHasPrefix(FieldGptMsg, v))
}

// GptMsgHasSuffix applies the HasSuffix predicate on the "gpt_msg" field.
func GptMsgHasSuffix(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldHasSuffix(FieldGptMsg, v))
}

// GptMsgEqualFold applies the EqualFold predicate on the "gpt_msg" field.
func GptMsgEqualFold(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldEqualFold(FieldGptMsg, v))
}

// GptMsgContainsFold applies the ContainsFold predicate on the "gpt_msg" field.
func GptMsgContainsFold(v string) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldContainsFold(FieldGptMsg, v))
}

// ThreadTopMsgIDEQ applies the EQ predicate on the "thread_top_msg_id" field.
func ThreadTopMsgIDEQ(v int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldEQ(FieldThreadTopMsgID, v))
}

// ThreadTopMsgIDNEQ applies the NEQ predicate on the "thread_top_msg_id" field.
func ThreadTopMsgIDNEQ(v int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldNEQ(FieldThreadTopMsgID, v))
}

// ThreadTopMsgIDIn applies the In predicate on the "thread_top_msg_id" field.
func ThreadTopMsgIDIn(vs ...int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldIn(FieldThreadTopMsgID, vs...))
}

// ThreadTopMsgIDNotIn applies the NotIn predicate on the "thread_top_msg_id" field.
func ThreadTopMsgIDNotIn(vs ...int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldNotIn(FieldThreadTopMsgID, vs...))
}

// ThreadTopMsgIDGT applies the GT predicate on the "thread_top_msg_id" field.
func ThreadTopMsgIDGT(v int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldGT(FieldThreadTopMsgID, v))
}

// ThreadTopMsgIDGTE applies the GTE predicate on the "thread_top_msg_id" field.
func ThreadTopMsgIDGTE(v int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldGTE(FieldThreadTopMsgID, v))
}

// ThreadTopMsgIDLT applies the LT predicate on the "thread_top_msg_id" field.
func ThreadTopMsgIDLT(v int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldLT(FieldThreadTopMsgID, v))
}

// ThreadTopMsgIDLTE applies the LTE predicate on the "thread_top_msg_id" field.
func ThreadTopMsgIDLTE(v int) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldLTE(FieldThreadTopMsgID, v))
}

// ThreadTopMsgIDIsNil applies the IsNil predicate on the "thread_top_msg_id" field.
func ThreadTopMsgIDIsNil() predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldIsNull(FieldThreadTopMsgID))
}

// ThreadTopMsgIDNotNil applies the NotNil predicate on the "thread_top_msg_id" field.
func ThreadTopMsgIDNotNil() predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldNotNull(FieldThreadTopMsgID))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.GPTDialog {
	return predicate.GPTDialog(sql.FieldLTE(FieldCreatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.GPTDialog) predicate.GPTDialog {
	return predicate.GPTDialog(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.GPTDialog) predicate.GPTDialog {
	return predicate.GPTDialog(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.GPTDialog) predicate.GPTDialog {
	return predicate.GPTDialog(sql.NotPredicates(p))
}
