openapi: 3.0.3
info:
  title: Go Faster Status API
  description: Statistical insights for thr Go Faster system
  version: 0.1.0
  license:
    name: Apache 2.0
    url: https://github.com/go-faster/bot/blob/main/LICENSE
servers:
  - url: https://api.go-faster.org/
    description: Production
  - url: https://localhost:8081
    description: Local
paths:
  /status:
    get:
      operationId: "status"
      description: "get status"
      responses:
        200:
          description: Go Faster Status
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Status"
        default:
          $ref: "#/components/responses/Error"
  /badge/telegram/online:
    parameters:
      - required: true
        in: query
        name: groups
        schema:
          type: array
          items:
            type: string
    get:
      operationId: "getTelegramOnlineBadge"
      responses:
        200:
          $ref: "#/components/responses/SVG"
        default:
          $ref: "#/components/responses/Error"
  /badge/telegram/{group_name}:
    parameters:
      - required: true
        in: path
        name: group_name
        schema:
          type: string
    get:
      operationId: "getTelegramBadge"
      description: "get svg badge for telegram group"
      parameters:
        - in: query
          name: title
          required: false
          schema:
            type: string
      responses:
        200:
          $ref: "#/components/responses/SVG"
        default:
          $ref: "#/components/responses/Error"
  /github/status:
    post:
      description: https://www.githubstatus.com/ webhook
      operationId: "githubStatus"
      parameters:
        - name: secret
          in: query
          required: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/StatusNotification"
      responses:
        200:
          description: "Github status accepted"
        default:
          $ref: "#/components/responses/Error"

components:
  responses:
    Error:
      description: "Error while processing request"
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/Error"
    SVG:
      description: Badge
      headers:
        Cache-Control:
          description: "The Cache-Control header provides important info on how long a response may be considered fresh"
          schema:
            type: string
          example: "max-age=3600, public, must-revalidate"
        ETag:
          description: "The ETag header provides a unique identifier for the response"
          schema:
            type: string
          example: "W/\"123456789\""
      content:
        "image/svg+xml":
          schema:
            type: string
            format: binary
  schemas:
    Error:
      type: object
      description: "error description"
      properties:
        message:
          type: string
      required: [ message ]
    User:
      type: object
      required:
        - id
        - nickname
        - full_name
        - avatar_url
        - html_url
      properties:
        id:
          type: integer
          format: int64
          description: User ID
        nickname:
          type: string
          description: User name
        full_name:
          type: string
          description: User full name
        avatar_url:
          type: string
          format: uri
          description: User avatar URL
        html_url:
          type: string
          format: uri
          description: User profile URL
    UserStat:
      type: object
      description: User statistics
      required:
        - user
        - total_commits
      properties:
        user:
          $ref: "#/components/schemas/User"
        total_commits:
          type: integer
          description: Total commits
    Statistics:
      type: object
      description: Statistics
      required:
        - total_commits
        - top_users
      properties:
        total_commits:
          type: integer
          description: Total commits
        top_users:
          type: array
          description: Top users
          items:
            $ref: "#/components/schemas/UserStat"
    Status:
      type: object
      description: Status
      required: [ stat, message ]
      properties:
        message:
          type: string
          description: Message
        stat:
          $ref: "#/components/schemas/Statistics"
    StatusNotification:
      oneOf:
        - $ref: "#/components/schemas/StatusNotificationIncidentUpdate"
        - $ref: "#/components/schemas/StatusNotificationComponentUpdate"
    StatusNotificationIncident:
      type: object
      description: "Incident object"
      required:
        - backfilled
        - created_at
        - impact
        - monitoring_at
        - postmortem_ignored
        - postmortem_notified_subscribers
        - postmortem_notified_twitter
        - scheduled_auto_transition
        - scheduled_remind_prior
        - shortlink
        - status
        - updated_at
        - id
        - organization_id
        - incident_updates
        - name
      properties:
        backfilled:
          type: boolean
        created_at:
          type: string
          format: date-time
        impact:
          type: string
        impact_override:
          type: string
          nullable: true
        monitoring_at:
          type: string
          format: date-time
        postmortem_body:
          type: string
          nullable: true
        postmortem_body_last_updated_at:
          type: string
          format: date-time
          nullable: true
        postmortem_ignored:
          type: boolean
        postmortem_notified_subscribers:
          type: boolean
        postmortem_notified_twitter:
          type: boolean
        postmortem_published_at:
          type: string
          format: date-time
          nullable: true
        resolved_at:
          type: string
          format: date-time
          nullable: true
        scheduled_auto_transition:
          type: boolean
        scheduled_for:
          type: string
          format: date-time
          nullable: true
        scheduled_remind_prior:
          type: boolean
        scheduled_reminded_at:
          type: string
          format: date-time
          nullable: true
        scheduled_until:
          type: string
          format: date-time
          nullable: true
        shortlink:
          type: string
        status:
          type: string
        updated_at:
          type: string
          format: date-time
        id:
          type: string
        organization_id:
          type: string
        incident_updates:
          type: array
          items:
            type: object
            required:
              - body
              - created_at
              - display_at
              - status
              - updated_at
              - wants_twitter_update
              - id
              - incident_id
            properties:
              body:
                type: string
              created_at:
                type: string
                format: date-time
              display_at:
                type: string
                format: date-time
              status:
                type: string
              twitter_updated_at:
                type: string
                format: date-time
                nullable: true
              updated_at:
                type: string
                format: date-time
              wants_twitter_update:
                type: boolean
              id:
                type: string
              incident_id:
                type: string
        name:
          type: string
    StatusNotificationIncidentUpdate:
      type: object
      description: "Incident updates"
      required:
        - incident
      properties:
        incident:
          $ref: "#/components/schemas/StatusNotificationIncident"
    StatusNotificationComponentUpdateInfo:
      type: object
      description: "Component update info"
      required:
        - created_at
        - new_status
        - old_status
        - id
        - component_id
      properties:
        created_at:
          type: string
          format: date-time
        new_status:
          type: string
        old_status:
          type: string
        id:
          type: string
        component_id:
          type: string
    StatusNotificationComponent:
      type: object
      description: "Component object"
      required:
        - created_at
        - id
        - name
        - status
      properties:
        created_at:
          type: string
          format: date-time
        id:
          type: string
        name:
          type: string
        status:
          type: string
    StatusNotificationComponentUpdate:
      type: object
      description: "Component updates"
      required:
        - component_update
        - component
      properties:
        component_update:
          $ref: "#/components/schemas/StatusNotificationComponentUpdateInfo"
        component:
          $ref: "#/components/schemas/StatusNotificationComponent"
